{"version":3,"file":"main.js","mappings":"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","sources":["webpack://project-mesto/./src/components/modals.js","webpack://project-mesto/./src/components/api.js","webpack://project-mesto/./src/components/card.js","webpack://project-mesto/./src/components/validation.js","webpack://project-mesto/./src/scripts/index.js"],"sourcesContent":["\nexport const openModal = (popup) => {      \n    popup.classList.add('popup_is-opened');\n    document.addEventListener('keydown', closeEsc);\n    popup.addEventListener('click', closePopupByClick);\n}\n\nexport const closeModal = (popup) => {\n    popup.classList.remove('popup_is-opened');\n    document.removeEventListener('keydown', closeEsc);\n    popup.removeEventListener('click', closePopupByClick);\n}\n\nconst closeEsc = evt => {\n    if (evt.key === 'Escape') {\n        const popupIsOpen = document.querySelector('.popup_is-opened');\n        closeModal(popupIsOpen);\n    }\n}\n\nconst closePopupByClick = evt => {\n    if (evt.target === evt.currentTarget || evt.target.classList.contains('popup__close')) { \n         closeModal(evt.currentTarget); \n    } \n }","export const config = {\n    baseUrl: \"https://nomoreparties.co/v1/wff-cohort-21\",\n    headers: {\n      authorization: \"710148f6-ab5d-49c8-b9e8-391a6f602323\",\n      \"Content-Type\": \"application/json\",\n    }\n};\n\nconst response = (res) => {\n    if(res.ok) {\n        return res.json();\n    } else {\n        return Promise.reject(`Ошибка: ${res.status}`)\n    }\n}\n\nexport function getInitialCard() {\n    return fetch (`${config.baseUrl}/cards`, {\n        method: 'GET',\n        headers: config.headers\n    })\n    .then(response)\n}\n\nexport const getUserData = () => {\n    return fetch(`${config.baseUrl}/users/me`, {\n        method: 'GET',\n        headers: config.headers\n    })\n    .then(response)  \n} \n\nexport const editUser = (data) => {\n    return fetch(`${config.baseUrl}/users/me`, {\n        method: 'PATCH',\n        headers: config.headers,\n        body: JSON.stringify(data)\n    })\n    .then(response)\n}\n\nexport const addNewCard = (card) => {\n    return fetch(`https://nomoreparties.co/v1/wff-cohort-21/cards `, {\n        method: 'POST',\n        headers: config.headers,\n        body: JSON.stringify ({\n            name: card.name,\n            link: card.link\n        })\n    })\n    .then(response)\n}\n\nexport const deleteCard = (cardId) => {\n    console.log(cardId)\n    return fetch(`https://nomoreparties.co/v1/wff-cohort-21/cards/${cardId}`, {\n        method: 'DELETE',\n        headers: config.headers\n    }) \n    .then(response)\n}\n\nexport const putLike = (cardId) => {\n    return fetch(`${config.baseUrl}/cards/likes/${cardId}`, \n        {\n        method: 'PUT',\n        headers: config.headers\n    }\n)\n    .then(response)\n}\n\nexport const deleteLike = (cardId) => {\n    return fetch(`${config.baseUrl}/cards/likes/${cardId}`, {\n        method: 'DELETE',\n        headers: config.headers\n    })\n    .then((res) => {\n        return res.json()\n    })\n}\n\nexport const updateAvatar = (data) => {\n    return fetch(`https://nomoreparties.co/v1/wff-cohort-21/users/me/avatar`, {\n        method: 'PATCH',\n        headers: config.headers,\n        body: JSON.stringify({\n            avatar: data\n        })\n    })\n    .then(response)\n}","// @todo: Функция создания карточки\n\nimport { openModal } from \"./modals\";\nimport {putLike, deleteLike } from \"./api\"\n\nexport function createCard (element, handleLike, deleteMyCard, openCard, userId) {\n    const cardTemplate = document.querySelector('#card-template');\n    const cardElement = cardTemplate.content.querySelector('.places__item').cloneNode(true);\n    const cardTitle = cardElement.querySelector('.card__title');\n    const cardImage = cardElement.querySelector('.card__image');\n    const cardLikeButton = cardElement.querySelector('.card__like-button');\n    const deleteButton = cardElement.querySelector('.card__delete-button');\n    const cardLikesCounter = cardElement.querySelector('.card__like-counter')\n    const cardId = element._id;\n    cardTitle.textContent = element.name;\n    cardImage.src = element.link;\n    cardImage.alt = element.name;\n    cardLikesCounter.textContent = element.likes.length;\n\n    if (element.likes.some((like) => like._id === userId)) {\n        cardLikeButton.classList.add('card__like-button_is-active')\n    }\n\n    if(element.owner._id !== userId) {\n        // resetButton.disabled = true;\n        deleteButton.classList.add('card__delete-button-hidden');\n    } else {\n        deleteButton.addEventListener('click', function() {\n            const popupDelete = document.querySelector('.popup__type_delete');\n            const formDelete = document.forms['delete-card'];\n            formDelete.addEventListener('submit', (evt) => {\n                evt.preventDefault();\n                 deleteMyCard(cardId, cardElement)}, {once: true})\n            openModal(popupDelete);\n            })\n        }\n\n    cardLikeButton.addEventListener('click', function() {\n        handleLike(cardLikeButton, cardId, cardLikesCounter);\n    });\n\n    cardImage.addEventListener('click', function() {\n        openCard(element);\n    });\n\n    return cardElement;\n}\n\n\n// Функция лайка карточки\nexport function handleLike (cardLikeButton, cardId, cardLikesCounter) {\n    const likes = cardLikeButton.classList.contains('card__like-button_is-active') ? deleteLike : putLike;\n    likes(cardId)\n    .then((res) => {\n        cardLikeButton.classList.toggle('card__like-button_is-active'); \n        cardLikesCounter.textContent = res.likes.length;\n    })\n    .catch((err) => {\n        console.log(err)\n    })    \n}","\nexport const validationConfig = {\n    formSelector: '.popup__form',\n    inputSelector: '.popup__input',\n    submitButtonSelector: '.popup__button',\n    inactiveButtonClass: 'popup__button_disabled',\n    inputErrorClass: 'popup__input_type_error',\n    errorClass: 'popup__error_visible'\n}; \n\nconst showInputError = (formElement, inputElement, errorMessage, validationConfig) => {\n    const errorElement = formElement.querySelector(`.${inputElement.id}-error`);\n    inputElement.classList.add(validationConfig.inputErrorClass);\n    errorElement.textContent = errorMessage;\n    errorElement.classList.add(validationConfig.errorClass);\n};\n\nconst hideInputError = (formElement, inputElement, validationConfig) => {\n    const errorElement = formElement.querySelector(`.${inputElement.id}-error`);\n    inputElement.classList.remove(validationConfig.inputErrorClass);\n    errorElement.classList.remove(validationConfig.errorClass);\n    errorElement.textContent = '';\n};\n\nconst checkInputValidity = (formElement, inputElement) => {\n    if (!inputElement.validity.valid) {\n        showInputError(formElement, inputElement, inputElement.validationMessage, validationConfig);    \n    } else {\n        hideInputError(formElement, inputElement, validationConfig);  \n    }\n\n    if (inputElement.validity.patternMismatch) {\n        inputElement.setCustomValidity(inputElement.dataset.errorMessage);\n    } else {\n        inputElement.setCustomValidity('');\n    }\n};\n\nconst setEventListeners = (formElement, validationConfig) => {\n    const inputList = Array.from(formElement.querySelectorAll(validationConfig.inputSelector));\n    const buttonElement = formElement.querySelector(validationConfig.submitButtonSelector);\n\n    toggleButtonState(inputList, buttonElement, validationConfig)\n\n    inputList.forEach((inputElement) => {\n        inputElement.addEventListener('input', function() {\n            checkInputValidity(formElement, inputElement);\n            toggleButtonState(inputList, buttonElement, validationConfig);\n        })\n    })\n};\n\nconst toggleButtonState = (inputList, buttonElement, validationConfig) => {\n    if (hasInvalidInput(inputList)) {\n        buttonElement.classList.add(validationConfig.inactiveButtonClass);\n        buttonElement.disabled = true;\n    } else {\n        buttonElement.classList.remove(validationConfig.inactiveButtonClass);\n        buttonElement.disabled = false;\n    }\n};\n\nconst hasInvalidInput = (inputList) => {\n    return inputList.some((inputElement) => !inputElement.validity.valid)\n};\n\nexport const enableValidation = (validationConfig) => {\n    const formList = Array.from(document.querySelectorAll(validationConfig.formSelector));\n    formList.forEach((formElement) => {\n        formElement.addEventListener('sumbit', (evt) => {\n            evt.preventDefault();\n        })\n        setEventListeners(formElement, validationConfig)\n        })\n    }\n\nexport const clearValidation = (formElement, validationConfig) => {\n    const inputList = Array.from(formElement.querySelectorAll(validationConfig.inputSelector));\n    const buttonElement = formElement.querySelector(validationConfig.submitButtonSelector);\n\n    inputList.forEach((inputElement) => {\n        hideInputError(formElement, inputElement, validationConfig);\n        inputElement.value = '';\n    })\n\n    toggleButtonState(inputList, buttonElement, validationConfig)\n}","import '../pages/index.css';\nimport {createCard, handleLike} from '../components/card.js'\nimport {openModal, closeModal} from '../components/modals.js'\nimport {enableValidation, clearValidation, validationConfig} from '../components/validation.js'\nimport { addNewCard, editUser, getInitialCard, getUserData, updateAvatar, deleteCard } from '../components/api.js';\n\n\n// const cardTemplate = document.querySelector('#card-template');\nconst container = document.querySelector('.places__list');\nconst buttonEditprofile = document.querySelector('.profile__edit-button');\nconst buttonAddNewCard = document.querySelector('.profile__add-button');\nconst popupEdit = document.querySelector('.popup_type_edit');\nconst popupNewCard = document.querySelector('.popup_type_new-card');\nconst popupModalImage = document.querySelector('.popup_type_image');\nconst formProfile = document.forms['edit-profile'];\nconst nameInput = document.querySelector('.popup__input_type_name');\nconst jobInput = document.querySelector('.popup__input_type_description');\nconst profileTitle = document.querySelector('.profile__title');\nconst profileDescription = document.querySelector('.profile__description');\nconst formNewPlace = document.forms['new-place'];\nconst cardNameInput = document.querySelector('.popup__input_type_card-name');\nconst urlInput = document.querySelector('.popup__input_type_url');\nconst popupImage = document.querySelector('.popup__image');\nconst popupCaption = document.querySelector('.popup__caption'); \n//переменные для смены аватара\nconst avatarImage = document.querySelector('.profile__image');\nconst popupAvatar = document.querySelector('.popup_type_avatar');\nconst formAvatar = document.forms['avatar-profile'];\nconst avatarInput = document.querySelector('.popup__input_type_avatar')\n//переменные для удаления карточки\nconst popupDelete = document.querySelector('.popup__type_delete');\nlet userId = '';\n\n// Функция добавления новой карточки\nfunction handleNewPlaceSubmit(container, createCard) {\n    formNewPlace.addEventListener('submit', function(evt) {\n        evt.preventDefault(); \n        evt.submitter.textContent = 'Сохранение...'\n        const card = {name: cardNameInput.value, link: urlInput.value}\n        addNewCard (card) \n        .then((element) => {\n            const newCard = createCard(\n                element, \n                handleLike, \n                deleteMyCard,\n                openCard, \n                userId\n        );\n        container.prepend(newCard);\n        formNewPlace.reset();\n        closeModal(popupNewCard);\n        })\n        .catch((err) => {\n            console.log(err)\n        })\n        .finally(() => {\n            evt.submitter.textContent = 'Сохранить'\n        })\n    })\n}\n\n// Функция удаления карточки\n export function deleteMyCard(cardId, cardElement) {   \n        deleteCard(cardId)\n        .then(() => { \n        cardElement.remove()\n        closeModal(popupDelete)\n        })\n        .catch((err) => {\n        console.log(err)\n        })\n}\n\n// Функция открытия картинки карточки\nexport function openCard (card) {\n    openModal(popupModalImage);\n    popupCaption.textContent = card.name;\n    popupImage.src = card.link;\n    popupImage.alt = card.name;\n}\n\n // редактирование информации о себе\nformProfile.addEventListener('submit', function(evt) {\n    evt.preventDefault();\n    evt.submitter.textContent = 'Сохранение...'\n    editUser({name: nameInput.value, about: jobInput.value})\n    .then(() => {\n        profileTitle.textContent = nameInput.value;\n        profileDescription.textContent = jobInput.value;\n        closeModal(popupEdit);\n    })\n    .catch((err) => {\n        console.log(err)\n    })\n    .finally(() => {\n        evt.submitter.textContent = 'Сохранить'\n    })\n})  \n\n//редактирование аатара\nformAvatar.addEventListener('submit', function(evt) {\n    evt.preventDefault();\n    evt.submitter.textContent = 'Сохранение...'\n    updateAvatar(avatarInput.value)\n    .then((data) => {\n        avatarImage.style.backgroundImage = `url(${data.avatar})`\n        closeModal(popupAvatar);\n    })\n    .catch((err) => {\n        console.log(err)\n    })\n    .finally(() => {\n        evt.submitter.textContent = 'Сохранить'\n    })\n})\n\n// открытие модальных окон\nbuttonEditprofile.addEventListener('click', function(){\n    openModal(popupEdit);\n    clearValidation(formProfile, validationConfig);\n    nameInput.value = profileTitle.textContent;\n    jobInput.value = profileDescription.textContent;\n})  \n\nbuttonAddNewCard.addEventListener('click', function(){\n    openModal(popupNewCard);\n    clearValidation(formNewPlace, validationConfig);\n}) \n\navatarImage.addEventListener('click', function(){\n    openModal(popupAvatar);\n    clearValidation(formAvatar, validationConfig);\n})\n\nhandleNewPlaceSubmit(container, createCard, deleteMyCard)\n\nenableValidation(validationConfig)\n// fetch('https://nomoreparties.co/v1/wff-cohort-21/cards', {\n//     method: 'GET',\n//     headers: {\n//       authorization: '710148f6-ab5d-49c8-b9e8-391a6f602323'\n//     }\n//   })\n//     .then(res => res.json())\n//     .then((result) => {\n//       console.log(result);\n//     }); \n    \nPromise.all([getInitialCard(), getUserData()])\n    .then(([initialCards, userData]) => {\n        userId = userData._id\n        profileTitle.textContent = userData.name\n        profileDescription.textContent = userData.about;\n        avatarImage.style.backgroundImage = `url(${userData.avatar})`;\n        \n        initialCards.forEach((element) => {\n            const cardElement = createCard(\n                element, \n                handleLike, \n                deleteMyCard, \n                openCard, \n                 userId\n            )\n            container.append(cardElement);\n        })\n    })\n    .catch((err) => {\n        console.log(err)\n    })"],"names":["openModal","popup","classList","add","document","addEventListener","closeEsc","closePopupByClick","closeModal","remove","removeEventListener","evt","key","popupIsOpen","querySelector","target","currentTarget","contains","config","baseUrl","headers","authorization","response","res","ok","json","Promise","reject","concat","status","putLike","cardId","fetch","method","then","deleteLike","createCard","element","handleLike","deleteMyCard","openCard","userId","cardElement","content","cloneNode","cardTitle","cardImage","cardLikeButton","deleteButton","cardLikesCounter","_id","textContent","name","src","link","alt","likes","length","some","like","owner","popupDelete","forms","preventDefault","once","toggle","catch","err","console","log","validationConfig","formSelector","inputSelector","submitButtonSelector","inactiveButtonClass","inputErrorClass","errorClass","hideInputError","formElement","inputElement","errorElement","id","checkInputValidity","validity","valid","errorMessage","showInputError","validationMessage","patternMismatch","setCustomValidity","dataset","toggleButtonState","inputList","buttonElement","hasInvalidInput","disabled","clearValidation","Array","from","querySelectorAll","forEach","value","container","buttonEditprofile","buttonAddNewCard","popupEdit","popupNewCard","popupModalImage","formProfile","nameInput","jobInput","profileTitle","profileDescription","formNewPlace","cardNameInput","urlInput","popupImage","popupCaption","avatarImage","popupAvatar","formAvatar","avatarInput","deleteCard","card","data","submitter","about","body","JSON","stringify","finally","avatar","style","backgroundImage","newCard","prepend","reset","handleNewPlaceSubmit","setEventListeners","enableValidation","all","_ref","_ref2","initialCards","userData","append"],"sourceRoot":""}